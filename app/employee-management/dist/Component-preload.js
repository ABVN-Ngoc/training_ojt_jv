//@ui5-bundle employee-management/Component-preload.js
sap.ui.require.preload({
	"employee-management/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","employee-management/model/models"],(e,t)=>{"use strict";return e.extend("employee-management.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"employee-management/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("employee-management.controller.App",{onInit(){}})});
},
	"employee-management/controller/LandingPage.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/ui/core/Messaging","sap/m/MessageBox","sap/m/Text","sap/ui/model/json/JSONModel","sap/ui/model/ValidateException","./../model/models","./../model/formatter","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/base/i18n/ResourceBundle"],(e,t,a,s,o,r,l,i,n,m,c,d)=>{"use strict";return e.extend("employee-management.controller.LandingPage",{formatter:n,onInit:async function(){const e=this.getView();i.setGlobalModel(e);i.setInitVisibleControl(e);await i.getRole(e);await i.getDepartment(e);await i.getRoleLogin(e);const t=new sap.ui.model.odata.v4.ODataModel({operationMode:"Server",serviceUrl:"/odata/v4/ngoc123/",synchronizationMode:"None"});this.byId("table").bindItems({path:"EmployeeList>/Employees",parameters:{$expand:"role,department"},template:new sap.m.ColumnListItem({type:"Active",press:this.onItemPress.bind(this),cells:[new o({text:"{EmployeeList>firstName} {EmployeeList>lastName}"}),new sap.m.Text({text:"{EmployeeList>gender}"}),new sap.tnt.InfoLabel({text:"{EmployeeList>role/name}"}),new sap.m.Text({text:"{EmployeeList>department/name}"}),new sap.m.Text({text:"{EmployeeList>email}"}),new sap.m.Text({text:"{EmployeeList>dateOfBirth}"}),new sap.m.Text({text:"{EmployeeList>salary}"}),new sap.m.Button({id:"btn_Delete",press:this.onItemDelete.bind(this),icon:"sap-icon://decline",type:"Transparent",visible:"{RoleInfo>/admin}"})]})});e.setModel(t,"EmployeeList");this.modelI18n=d.create({url:"i18n/i18n.properties"});this.applyData=this.applyData.bind(this);this.fetchData=this.fetchData.bind(this);this.getFiltersWithValues=this.getFiltersWithValues.bind(this);this.oFilterBar=this.getView().byId("filterbar");this.oTableFilterbar=this.getView().byId("table");this.oFilterBar.registerFetchData(this.fetchData);this.oFilterBar.registerApplyData(this.applyData);this.oFilterBar.registerGetFiltersWithValues(this.getFiltersWithValues)},onPressHome:function(){const e=this.getView();this._clearDetailForm();this._clearForm();i._getModel(e,"VisibleControl").setProperty("/",{Home:true,List:false,InputForm:false,Detail:false})},onPressInput:function(){const e=this.getView();this._clearDetailForm();this._clearForm();i._getModel(e,"VisibleControl").setProperty("/",{Home:false,List:false,InputForm:true,Detail:false})},onPressCreate:async function(e){const a=this.getView();const o=i._getModel(a,"EmployeeInput").getData();const r=i._getModel(a,"EmployeeList");const l=this.modelI18n.getText("msgEmployeeCreate");const n=this.modelI18n.getText("msgFail");console.log("oDataModel",o);if(!this._validateForm()){return}const m={firstName:o.firstName,lastName:o.lastName,email:o.email,gender:o.gender,dateOfBirth:o.dateOfBirth,hireDate:o.hireDate,department:{ID:o.department?.ID},role:{ID:o.role?.ID}};console.log("oPayload",m);a.setBusy(true);try{const e=r.bindList("/Employees");await e.create(m);t.show(l);a.setBusy(false);await r.refresh();this._clearForm()}catch(e){a.setBusy(false);s.error(n,e)}i._getModel(a,"VisibleControl").setProperty("/",{Home:false,List:true,InputForm:false,Detail:false})},onPressList:function(){const e=this.getView();this._refreshTable();this._clearDetailForm();this._clearForm();e.getModel("VisibleControl").setProperty("/",{Home:false,List:true,InputForm:false,Detail:false})},onItemPress:function(e){const t=this.getView();const a=e.getParameter("listItem")||e.getSource();let s=a.getBindingContext("EmployeeList");const o=s.getObject();i._setModel(t,o,"EmployeeInfo");console.log("EmployeeInfo press",i._getModel(t,"EmployeeInfo"));i._getModel(t,"VisibleControl").setProperty("/",{Home:false,List:false,InputForm:false,Detail:true})},onItemDelete:async function(e){const a=e.getSource().getParent();const o=a.getBindingContext("EmployeeList");if(!o){t.show("No data found");return}s.confirm(this.modelI18n.getText("msgDelete"),{onClose:async e=>{if(e===s.Action.OK){try{if(typeof o.delete==="function"){await o.delete();t.show(this.modelI18n.getText("msgDeleteSuccess"))}else{s.error(this.modelI18n.getText("msgDeleteFail"))}}catch(e){s.error(this.modelI18n.getText("msgDeleteFail")+e.message)}}}})},_refreshTable:function(){const e=this.byId("table");const t=e.getBinding("rows");if(t){t.refresh(true)}},onPressCloseDetail:async function(){const e=this.getView();const t=i._getModel(e,"EmployeeList");await t.refresh();this._clearDetailForm();i._getModel(e,"VisibleControl").setProperty("/",{Home:false,List:true,InputForm:false,Detail:false})},onPressUpdate:async function(){const e=this.getView();const a=i._getModel(e,"EmployeeList");const o=JSON.parse(JSON.stringify(i._getModel(e,"EmployeeInfo").getData()));const r=this.modelI18n.getText("msgEmployeeUpdate");if(!this._validateDetailForm()){return}e.setBusy(true);if(!o||!o.ID){s.error(this.modelI18n.getText("msgEmployeeInvalid"));this._clearDetailForm();return}const l=`/Employees('${o.ID}')`;try{const n=a.bindContext(l);const m=await n.getBoundContext();if(!m){s.error(this.modelI18n.getText("msgEmployee404"));this._clearDetailForm();return}const c=o.role?.ID;const d=o.hireDate;let h=0;if(c&&d){const a=i._getModel(e,"Role").getData();const s=a.find(e=>e.ID===c);if(s&&s.baseSalary){const e=parseFloat(s.baseSalary)||0;const t=new Date(d);const a=new Date;const o=a.getFullYear()-t.getFullYear()-(a.getMonth()<t.getMonth()||a.getMonth()===t.getMonth()&&a.getDate()<t.getDate()?1:0);const r=o*1e3;h=e+r}else{t.show(this.modelI18n.getText("msgRole404"))}}else{t.show(this.modelI18n.getText("msgMissingRoleHireDate"))}console.log("iTotalSalary",h);console.log("266 oDataModel",o);m.setProperty("ID",o.ID);m.setProperty("firstName",o.firstName);t.show(r);e.setBusy(false);await a.refresh();this._clearDetailForm()}catch(t){e.setBusy(false);s.error(this.modelI18n.getText("msgError")+t.message)}i._getModel(e,"VisibleControl").setProperty("/",{Home:false,List:true,InputForm:false,Detail:false})},onPressCalSalary:function(e){const a=this.getView();const o=a.getModel("EmployeeInfo");const r=a.getModel("Role");const l=o.getData();const i=this.modelI18n.getText("msgFailCalSalary");const n=this.modelI18n.getText("msgMissingRoleHireDate");const m=this.modelI18n.getText("msgRole404");a.setBusy(true);try{const e=l.role?.ID;const s=l.hireDate;if(!e||!s){t.show(n);a.setBusy(false);return}const i=r.getData();const c=i.find(t=>t.ID===e);if(!c||!c.baseSalary){t.show(m);a.setBusy(false);return}const d=parseFloat(c.baseSalary)||0;const h=new Date(s);const f=new Date;const u=f.getFullYear()-h.getFullYear()-(f.getMonth()<h.getMonth()||f.getMonth()===h.getMonth()&&f.getDate()<h.getDate()?1:0);const g=u*1e3;const p=d+g;o.setProperty("/salary",p);t.show(`Salary calculated: $${p.toLocaleString()}`);a.setBusy(false)}catch(e){a.setBusy(false);s.error(i,e)}},onPressClose:async function(){const e=this.getView();const t=i._getModel(e,"EmployeeList");await t.refresh();this._clearForm();i._getModel(e,"VisibleControl").setProperty("/",{Home:true,List:false,InputForm:false,Detail:false})},onChangeEmail:function(e){const t=e.getSource();let a=t.getValue();const s=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!a.match(s)){t.setValueState("Error");t.setValueStateText("Input email not valid")}else{t.setValueState("Success");t.setValueStateText("Input email valid")}},onFilterChange:function(){this.updateTable()},updateTable:function(){this.oTableFilterbar.setShowOverlay(true)},onFilterSearch:function(){let e=[],t=[],a=[];const s=this.oFilterBar.getFilterGroupItems();for(let o=0;o<s.length;o++){const r=s[o];const l=r.getControl();const i=r.getName();if(i==="Department"){const a=l.getSelectedKeys();if(a.length===0){t=null}else{t=a.map(e=>new sap.ui.model.Filter({path:"department/ID",operator:c.EQ,value1:e}));e.push(new sap.ui.model.Filter(t,false))}}if(i==="Role"){const t=l.getSelectedKeys();if(t.length===0){a=null}else{a=t.map(e=>new sap.ui.model.Filter({path:"role/ID",operator:c.EQ,value1:e}));e.push(new sap.ui.model.Filter(a,false))}}}const o=this.oTableFilterbar.getBinding("items");if(e.length>0){o.filter(new sap.ui.model.Filter(e,true))}else{o.filter(null)}this.oTableFilterbar.setShowOverlay(false)},onClearFilters:function(){const e=this.oFilterBar.getFilterGroupItems();for(let t=0;t<e.length;t++){const a=e[t];const s=a.getControl();const o=a.getName();if(o==="Department"||o==="Role"){s.removeAllSelectedItems()}}},fetchData:function(){let e=this.oFilterBar.getAllFilterItems().reduce((e,t)=>{e.push({groupName:t.getGroupName(),fieldName:t.getName(),fieldData:t.getControl().getSelectedKeys()});return e},[]);return e},applyData:function(e){e.forEach(function(e){let t=this.oFilterBar.determineControlByName(e.fieldName,e.groupName);t.setSelectedKeys(e.fieldData)},this)},getFiltersWithValues:function(){const e=this.oFilterBar.getFilterGroupItems();let t=e.reduce((e,t)=>{let a=t.getControl();if(a&&a.getSelectedKeys&&a.getSelectedKeys().length>0){e.push(t)}return e},[]);return t},onSelectionChange:function(e){this.oFilterBar.fireFilterChange(e)},handleUploadComplete:function(e){const a=e.getParameter("files");if(!a||a.length===0){t.show("No file selected.");return}const s=["application/pdf","image/png","image/jpeg"];for(let e=0;e<a.length;e++){const o=a[e];const r=o.type;if(!s.includes(r)){t.show("Invalid file type: "+o.name);return}}this.byId("fileUploader").upload()},onSetLabelRole:function(){const e=this.getView().byId("table");const t=e.getItems();for(let e=0;e<t.length;e++){const a=t[e].getCells();const s=a[2];const o=s.getText();switch(o){case"HR":s.setColorScheme(1);break;case"Manager":s.setColorScheme(2);break;case"CEO":s.setColorScheme(3);break;case"Backend Developer":s.setColorScheme(9);break;case"Frontend Developer":s.setColorScheme(5);break;case"Full Stack Developer":s.setColorScheme(6);break;case"UI/UX Designer":s.setColorScheme(7);break;case"Project Manager":s.setColorScheme(8);break}}this._refreshTable()},_validateDetailForm:function(){const e=this.getView();const t=i._getModel(e,"EmployeeInfo").getData();const a=this.modelI18n.getText("msgFillin");let o="";const r={firstName:"d_iFirstName",lastName:"d_iLastName",email:"d_iEmail",gender:"d_ComboBoxGender",dateOfBirth:"d_DateofBirth",hireDate:"d_hireDate",department:"d_ComboBoxDepartment",role:"d_ComboBoxRole"};let l=true;const n=[];for(const[a,s]of Object.entries(r)){const r=e.byId(s);const i=t[a];const m=a==="department"||a==="role";const c=m?!i?.ID||i.ID.trim()==="":i===undefined||i===null||i==="";if(c){r.setValueState("Error");r.setValueStateText("This field is required");l=false;switch(a){case"firstName":o="First Name";break;case"lastName":o="Last Name";break;case"email":o="Email";break;case"gender":o="Gender";break;case"dateOfBirth":o="Date Of Birth";break;case"hireDate":o="Hire Date";break;case"department":o="Department";break;case"role":o="Role";break;default:break}n.push(`${o} is required`)}else{r.setValueState("None")}}const m=new Date(t.dateOfBirth);const c=new Date(t.hireDate);const d=e.byId("d_DateofBirth");const h=e.byId("d_hireDate");if(m>=c){d.setValueState("Error");h.setValueState("Error");d.setValueStateText("Date of birth must be before Hire date");h.setValueStateText("Hire date must be after Date of birth");n.push("Date of birth must be before Hire date");l=false}else{d.setValueState("None");h.setValueState("None")}if(!l){s.warning(n.join("\n"),{title:a})}return l},_validateForm:function(){const e=this.getView();const t=i._getModel(e,"EmployeeInput").getData();const a=this.modelI18n.getText("msgFillin");let o="";const r={firstName:"i_iFirstName",lastName:"i_iLastName",email:"i_iEmail",gender:"i_ComboBoxGender",dateOfBirth:"i_DateofBirth",hireDate:"i_hireDate",department:"i_ComboBoxDepartment",role:"i_ComboBoxRole"};let l=true;const n=[];for(const[a,s]of Object.entries(r)){const r=e.byId(s);const i=t[a];const m=a==="department"||a==="role";const c=m?!i?.ID||i.ID.trim()==="":i===undefined||i===null||i==="";if(c){r.setValueState("Error");r.setValueStateText("This field is required");l=false;switch(a){case"firstName":o="First Name";break;case"lastName":o="Last Name";break;case"email":o="Email";break;case"gender":o="Gender";break;case"dateOfBirth":o="Date Of Birth";break;case"hireDate":o="Hire Date";break;case"department":o="Department";break;case"role":o="Role";break;default:break}n.push(`${o} is required`)}else{r.setValueState("None")}}const m=new Date(t.dateOfBirth);const c=new Date(t.hireDate);const d=e.byId("i_DateofBirth");const h=e.byId("i_hireDate");if(m>=c){d.setValueState("Error");h.setValueState("Error");d.setValueStateText("Date of birth must be before Hire date");h.setValueStateText("Hire date must be after Date of birth");n.push("Date of birth must be before Hire date");l=false}else{d.setValueState("None");h.setValueState("None")}if(!l){s.warning(n.join("\n"),{title:a})}return l},_clearForm:function(){const e=this.getView();const t=i._getModel(e,"EmployeeInput");const a={ID:null,firstName:"",lastName:"",email:"",gender:"",dateOfBirth:null,hireDate:null,department:{ID:""},role:{ID:""}};t.setData(a);const s={firstName:"i_iFirstName",lastName:"i_iLastName",email:"i_iEmail",gender:"i_ComboBoxGender",dateOfBirth:"i_DateofBirth",hireDate:"i_hireDate",department:"i_ComboBoxDepartment",role:"i_ComboBoxRole"};for(const t of Object.values(s)){const a=e.byId(t);if(a){a.setValueState("None");a.setValue("")}}},_clearDetailForm:function(){const e=this.getView();const t=i._getModel(e,"EmployeeInput");const a={ID:null,firstName:"",lastName:"",email:"",gender:"",dateOfBirth:null,hireDate:null,department:{ID:""},role:{ID:""}};t.setData(a);const s={firstName:"d_iFirstName",lastName:"d_iLastName",email:"d_iEmail",gender:"d_ComboBoxGender",dateOfBirth:"d_DateofBirth",hireDate:"d_hireDate",department:"d_ComboBoxDepartment",role:"d_ComboBoxRole"};for(const t of Object.values(s)){const a=e.byId(t);if(a){a.setValueState("None");a.setValue("")}}},_formatToDateOnly:function(e){if(!isNaN(e)){let e=(new Date).toISOString().slice(0,10);return e}else{console.warn("Invalid date:",e);return null}}})});
},
	"employee-management/i18n/i18n.properties":'# This is the resource bundle for employee\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=Employee Application\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=Employee Application\n\ncompanyName=HYBE Entertainment\n\nemployeeInfo=Employee Information\nemployeeList=Employee List\nname=Name\nfirstName=First Name\nlastName=Last Name\ngender=Gender\ndepartment=Department\nrole=Role\ncertificate=Certificate\nuploadPlaceholder=Choose a file for Upload...\ndateOfBirth=Date of Birth\nhireDate=Hire Date\nsalary=Salary\nemail=Email\n\n# placeholder\nplaceholderFirstName=Enter First Name\nplaceholderLastName=Enter Last Name\nplaceholderName=Enter Name\nplaceholderEmail=Enter email address\nplaceholderGender=Select gender\nplaceholderRole=Select employee role\nplaceholderDepartment=Select department\nplaceholderHireDate=Select hire date\nemailValidation=E-mail must be a valid email address.\n\n# Button\ncancel=Cancel\nclose=Close\ncreate=Create\nedit=Edit\ncalSalary=Calculate Salary\nerror=Error\ndelete=Delete\nupdate=Update\n\n# Controller\n# Role\nhr=HR\nmanager=Manager\nceo=CEO\nbackendDeveloper=Backend Developer\nfrontendDeveloper=Frontend Developer\nfullStackDeveloper=Full Stack Developer\nuiuxDesigner=UI/UX Designer\nprjManager=Project Manager\n\n# Message\nmsgEmployeeCreate=Employee created successfully!\nmsgEmployeeUpdate=Employee updated successfully!\nmsgFailCreate=Failed to create employee: \nmsgFailUpdate=Failed to update employee: \nmsgError=Unexpected error:\nmsgRequire=This field is required\nmsgFail=Fail to create Employee\nmsgNone=None\nmsgFillin=Validate Error\nmsgDelete=Are you sure to delete?\nmsgDeleteFail=Delete fail\nmsgDeleteSuccess=Delete success\nmsgEmployee404=Employee not found\nmsgEmployeeInvalid=Invalid employee data\nmsgFailCalSalary=Failed to calculate salary\nmsgMissingRoleHireDate=Missing Role or Hire Date\nmsgRole404=Role not found or base salary missing\n\n# Delete\nconfirmDeleteTitle=Confirm Deletion\nconfirmDeleteMessage=Are you sure you want to delete employee {0} {1}?\nemployeeDeletedMessage=Employee {0} {1} was successfully deleted.\nerrorDeletingMessage=An error occurred while deleting the employee.',
	"employee-management/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"employee-management","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.1","toolsId":"e2e95eb2-2738-41f7-a0c3-b61d0f6f3083"},"dataSources":{"mainService":{"uri":"/odata/v4/ngoc123/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":true,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"employee-management.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"employee-management.view","async":true,"viewPath":"employee-management.view"},"routes":[{"name":"RouteLandingPage","pattern":":?query:","target":["TargetLandingPage"]}],"targets":{"TargetLandingPage":{"id":"LandingPage","name":"LandingPage"}}},"rootView":{"viewName":"employee-management.view.App","type":"XML","id":"App","async":true}}}',
	"employee-management/model/formatter.js":function(){
sap.ui.define([],()=>{"use strict";return{formatDate(r){if(r&&r!=""){let e=new Date(r+"T00:00:00");let n={year:"numeric",month:"long",day:"numeric"};return e.toLocaleString("en-US",n)}return""},formatCurrency:function(r){if(r==null||isNaN(r))return"";return new Intl.NumberFormat(undefined,{style:"currency",currency:"USD",minimumFractionDigits:0}).format(r)}}});
},
	"employee-management/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,t){"use strict";return{createDeviceModel:function(){var n=new e(t);n.setDefaultBindingMode("OneWay");return n},setGlobalModel:function(e){let t=[{key:"male",text:"Male"},{key:"female",text:"Female"}];this._setModel(e,t,"Gender")},setInitVisibleControl:function(e){const t={Home:true,List:false,Detail:false,InputForm:false};const n={ID:"",firstName:"",lastName:"",email:"",gender:"",dateOfBirth:"",hireDate:"",salary:0,performanceRating:"",department:{ID:""},role:{ID:""}};this._setModel(e,t,"VisibleControl");this._setModel(e,n,"EmployeeInput")},getEmployee:async function(e){e.byId("table").setBusy(true);try{const t=await fetch("/odata/v4/ngoc123/Employees?$expand=role,department",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let n=await t.json();let o=n.value;this._setModel(e,o,"EmployeeList");e.byId("table").setBusy(false);return o}else{const n=await t.json();const o=n.error;this.onShowErrorMessageBox("Error",o,null);e.byId("table").setBusy(false);return null}}catch(t){e.byId("table").setBusy(false);return null}},getRole:async function(e){try{const t=await fetch("/odata/v4/ngoc123/Roles",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let n=await t.json();let o=n.value;this._setModel(e,o,"Role");return o}else{const e=await t.json();const n=e.error;this.onShowErrorMessageBox("Error",n,null);return null}}catch(e){return null}},getDepartment:async function(e){try{const t=await fetch("/odata/v4/ngoc123/Departments",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let n=await t.json();let o=n.value;this._setModel(e,o,"Department");return o}else{const e=await t.json();const n=e.error;this.onShowErrorMessageBox("Error",n,null);return null}}catch(e){return null}},getEmployeeInfo:async function(e){try{const t=await fetch("/odata/v4/ngoc123/Employees",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let n=await t.json();let o=n.value;this._setModel(e,o,"EmployeeInfo");return o}else{const e=await t.json();const n=e.error;this.onShowErrorMessageBox("Error",n,null);return null}}catch(e){return null}},createEmployee:async function(e,t){e.setBusy(true);e.byId("btnEdit").setBusy(true).setEnabled(false);const n=this._getModel(e,"RoleInfo").getData();const o=n.token;const s="/odata/v4/ngoc123/Employees";try{const n=await fetch(s,{method:"POST",headers:{Authorization:"Bearer "+rawToken,"Content-Type":"application/json"},body:JSON.stringify(t)});e.setBusy(false);return n}catch(t){e.setBusy(false)}},updateEmployeeInfo:async function(e,t,n){e.setBusy(true);e.byId("btnEdit").setBusy(true).setEnabled(false);let o="/odata/v4/ngoc123/Employees('"+n+"')";try{const n=await fetch(o,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});e.setBusy(false);e.byId("btnEdit").setBusy(false).setEnabled(true);return n}catch(t){e.byId("btnEdit").setBusy(false).setEnabled(true);e.setBusy(false)}},deleteEmployeeInfo:async function(e,t){e.byId("table").setBusy(true);let n="/odata/v4/ngoc123/Employees('"+t+"')";try{const t=await fetch(n,{method:"DELETE",headers:{"Content-Type":"application/json"}});e.byId("table").setBusy(false);return t}catch(t){e.byId("table").setBusy(false)}},getRoleLogin:async function(e){try{const t=await fetch("/odata/v4/ngoc123/getRole",{method:"GET",headers:{"Content-Type":"application/json"}});if(t.status==200){let n=await t.json();console.log("oJsonResponse",n);const o=n.value;let s={admin:false,employee:false};if(o.includes("admin")){s={admin:true,employee:false}}else{s={admin:false,employee:true}}console.log("oRoleInfo",s);this._setModel(e,s,"RoleInfo");return t}}catch(e){return null}},_setModel:function(t,n,o){t.setModel(new e(n),o)},_getModel:function(e,t){let n=e.getModel(t);return n},_getTextI18n:function(e){let t=i18n.getText(e);return t}}});
},
	"employee-management/view/App.view.xml":'<mvc:View controllerName="employee-management.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><App id="app"></App></mvc:View>',
	"employee-management/view/LandingPage.view.xml":'<mvc:View controllerName="employee-management.controller.LandingPage"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"\n    xmlns="sap.m"><Page id="page" showHeader="false" class="page"><core:Fragment fragmentName="employee-management.view.fragment.Header" type="XML" /><content><core:Fragment fragmentName="employee-management.view.fragment.Home" type="XML" /><core:Fragment fragmentName="employee-management.view.fragment.List" type="XML" /><core:Fragment fragmentName="employee-management.view.fragment.InputForm" type="XML" /><core:Fragment fragmentName="employee-management.view.fragment.Detail" type="XML" /></content></Page></mvc:View>',
	"employee-management/view/fragment/Detail.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"\n    xmlns:upload="sap.m.upload"><VBox id="detail_main" class="detailContainer" width="100%" height="100%" alignItems="Center"\n        visible="{VisibleControl>/Detail}"><HBox id="header" width="100%" justifyContent="SpaceBetween" gap="1rem"\n            class="detailHeader"><Title id="t_emp_detail" text="Employee Detail" class="title" /></HBox><VBox id="detail_content" class="detailContent" width="80%"><HBox id="d_form" class="form" gap="5rem"><VBox id="d_leftContainer" class="leftContainer" width="50%" gap="1rem"><HBox id="d_VBoxFirstName" alignItems="Center"><VBox id="d_VBoxLFirstName" width="40%"><Label id="d_lFirstName" text="{i18n>firstName}" required="true" /></VBox><VBox id="d_VBoxIFirstName" width="60%"><Input id="d_iFirstName" type="Text"\n                                placeholder="{i18n>placeholderFirstName}"\n                                value="{EmployeeInfo>/firstName}"\n                                enabled="{RoleInfo>/admin}" required="true" /></VBox></HBox><HBox id="d_VBoxGender" alignItems="Center"><VBox id="d_VBoxLGender" width="40%"><Label id="d_lGender" text="{i18n>gender}" required="true" /></VBox><VBox id="d_VBoxIGender" width="60%"><ComboBox id="d_ComboBoxGender" items="{Gender>/}" width="100%"\n                                selectedKey="{EmployeeInfo>/gender}"\n                                placeholder="{i18n>placeholderGender}" required="true"\n                                enabled="{RoleInfo>/admin}"><core:Item id="d_itemGender" key="{Gender>text}"\n                                    text="{Gender>text}"\n                                    enabled="{RoleInfo>/admin}" /></ComboBox></VBox></HBox><HBox id="d_VBoxEmail" alignItems="Center"><VBox id="d_VBoxLEmail" width="40%"><Label id="d_lEmail" text="{i18n>email}" required="true" /></VBox><VBox id="d_VBoxIEmail" width="60%"><Input id="d_iEmail" type="Text" placeholder="{i18n>placeholderEmail}"\n                                liveChange="onChangeEmail" enabled="{RoleInfo>/admin}"\n                                value="{EmployeeInfo>/email}" required="true" /></VBox></HBox><HBox id="d_VBoxRole" alignItems="Center"><VBox id="d_VBoxLRole" width="40%"><Label id="d_lRole" text="{i18n>role}" required="true" /></VBox><VBox id="d_VBoxIRole" width="60%"><ComboBox id="d_ComboBoxRole" items="{Role>/}" width="100%"\n                                selectedKey="{EmployeeInfo>/role/ID}"\n                                placeholder="{i18n>placeholderRole}" required="true"\n                                enabled="{RoleInfo>/admin}"><core:Item id="d_itemRole" key="{Role>ID}"\n                                    text="{Role>name}"\n                                    enabled="{RoleInfo>/admin}" /></ComboBox></VBox></HBox><HBox id="d_HBoxhireDate" alignItems="Center"><VBox id="d_VBoxlhireDate" width="40%"><Label id="d_lhireDate" text="{i18n>hireDate}" required="true" /></VBox><VBox id="d_VBoxhireDate" width="60%"><DatePicker id="d_hireDate" change="onChangeHireDate"\n                                value="{EmployeeInfo>/hireDate}" valueFormat="yyyy-MM-dd"\n                                placeholder="{i18n>placeholderHireDate}" enabled="{RoleInfo>/admin}"\n                                required="true" /></VBox></HBox><HBox id="d_HBoxSalary" alignItems="Center"><VBox id="d_VBoxlSalary" width="40%"><Label id="d_lSalary" text="{i18n>salary}" /></VBox><VBox id="d_VBoxSalary" width="60%"><Input id="d_Salary" value="{EmployeeInfo>/salary}" editable="false" /></VBox></HBox></VBox><VBox id="d_rightContainer" class="rightContainer" width="50%" gap="1rem"><HBox id="d_VBoxLastName" alignItems="Center"><VBox id="d_VBoxLLastName" width="40%"><Label id="d_lLastName" text="{i18n>lastName}" required="true" /></VBox><VBox id="d_VBoxILastName" width="60%"><Input id="d_iLastName" type="Text"\n                                placeholder="{i18n>placeholderLastName}"\n                                value="{EmployeeInfo>/lastName}"\n                                enabled="{RoleInfo>/admin}" required="true" /></VBox></HBox><HBox id="d_DateOfBirth" alignItems="Center"><VBox id="d_VBoxlDateofBirth" width="40%"><Label id="d_lDateofBirth" text="{i18n>dateOfBirth}" required="true" /></VBox><VBox id="d_VBoxDateofBirth" width="60%"><DatePicker id="d_DateofBirth"\n                                value="{EmployeeInfo>/dateOfBirth}" valueFormat="yyyy-MM-dd"\n                                required="true"\n                                enabled="{RoleInfo>/admin}" /></VBox></HBox><HBox id="d_VBoxblank1" alignItems="Center" class="blankDetail"><VBox id="d_VBoxIblank1"><Input id="d_iblank1" type="Text" /></VBox></HBox><HBox id="d_VBoxDepartment" alignItems="Center"><VBox id="d_VBoxLDepartment" width="40%"><Label id="d_lDepartment" text="{i18n>department}" required="true" /></VBox><VBox id="d_VBoxIDepartment" width="60%"><ComboBox id="d_ComboBoxDepartment" items="{Department>/}" width="100%"\n                                placeholder="{i18n>placeholderDepartment}"\n                                selectedKey="{EmployeeInfo>/department/ID}" required="true"\n                                enabled="{RoleInfo>/admin}"><core:Item id="d_itemDepartment" key="{Department>ID}"\n                                    text="{Department>name}" enabled="{RoleInfo>/admin}" /></ComboBox></VBox></HBox><HBox id="d_VBoxblank2" alignItems="Center" class="blankDetail"><VBox id="d_VBoxIblank2"><Input id="d_iblank2" type="Text" /></VBox></HBox><HBox id="d_HBoxCalSalary"><Button id="btn_CalSalary" type="Attention" text="{i18n>calSalary}"\n                            press="onPressCalSalary" visible="{RoleInfo>/admin}" /></HBox></VBox></HBox><HBox id="footerEdit" justifyContent="End" gap="1rem"><Button id="btnCloseDetail" text="{i18n>close}" type="Transparent"\n                    press="onPressCloseDetail" /><Button id="btnUpdate" text="{i18n>update}" type="Emphasized" press="onPressUpdate"\n                    visible="{RoleInfo>/admin}" /></HBox></VBox></VBox></core:FragmentDefinition>',
	"employee-management/view/fragment/Header.fragment.xml":'<core:FragmentDefinition xmlns:core="sap.ui.core"\n    xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:tnt="sap.tnt" height="100%"><tnt:ToolHeader id="toolheader" class="toolHeader"><HBox id="right" class="right"><Image id="Image" src="./assets/logo.jpg" press="onPressHome" /><Title id="t_com" level="H3" text="{i18n>companyName}" class="title" /></HBox><HBox id="left" class= "left"><Button id="button2" type="Accept" text="Input Form" press="onPressInput" visible="{RoleInfo>/admin}"/><Button id="button3" type="Accept" text="Employee List" press="onPressList" /></HBox></tnt:ToolHeader></core:FragmentDefinition>\n',
	"employee-management/view/fragment/Home.fragment.xml":'<core:FragmentDefinition xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><HBox id="HBox_home" justifyContent="Center" alignItems="Center" height="100%" class="HBox_home"\n        visible="{VisibleControl>/Home}"><Image id="img_welcome" src="./assets/welcome.gif" width="70%" height="70%" class="img_wel" /></HBox></core:FragmentDefinition>',
	"employee-management/view/fragment/InputForm.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"\n    xmlns:u="sap.ui.unified"\n    xmlns:upload="sap.m.upload" ><VBox id="input_main" class="detailContainer" width="100%" height="100%" alignItems="Center"\n        visible="{VisibleControl>/InputForm}"><HBox id="input_header" width="100%" justifyContent="SpaceBetween" gap="1rem"\n            class="detailHeader"><Title id="t_emp_input" text="Employee input" class="title" /></HBox><VBox id="input_content" class="detailContent" width="80%"><HBox id="i_form" class="form" gap="5rem"><VBox id="i_leftContainer" class="leftContainer" width="50%" gap="1rem"><HBox id="i_VBoxFirstName" alignItems="Center"><VBox id="i_VBoxLFirstName" width="40%"><Label id="i_lFirstName" text="{i18n>firstName}" required="true" /></VBox><VBox id="i_VBoxIFirstName" width="60%"><Input id="i_iFirstName" type="Text"\n                                placeholder="{i18n>placeholderFirstName}"\n                                value="{EmployeeInput>/firstName}"\n                                enabled="{Edit>/isEdit}" required="true" /></VBox></HBox><HBox id="i_VBoxGender" alignItems="Center"><VBox id="i_VBoxLGender" width="40%"><Label id="i_lGender" text="{i18n>gender}" required="true" /></VBox><VBox id="i_VBoxIGender" width="60%"><ComboBox id="i_ComboBoxGender" items="{Gender>/}" width="100%"\n                                selectedKey="{EmployeeInput>/gender}"\n                                placeholder="{i18n>placeholderGender}" required="true"><core:Item id="i_itemGender" key="{Gender>text}"\n                                    text="{Gender>text}"\n                                    enabled="{Edit>/isEdit}" /></ComboBox></VBox></HBox><HBox id="i_VBoxEmail" alignItems="Center"><VBox id="i_VBoxLEmail" width="40%"><Label id="i_lEmail" text="{i18n>email}" required="true" /></VBox><VBox id="i_VBoxIEmail" width="60%"><Input id="i_iEmail" type="Text" placeholder="{i18n>placeholderEmail}"\n                                liveChange="onChangeEmail" enabled="{Edit>/isEdit}"\n                                value="{EmployeeInput>/email}" required="true" /></VBox></HBox><HBox id="i_VBoxRole" alignItems="Center"><VBox id="i_VBoxLRole" width="40%"><Label id="i_lRole" text="{i18n>role}" required="true" /></VBox><VBox id="i_VBoxIRole" width="60%"><ComboBox id="i_ComboBoxRole" items="{Role>/}" width="100%"\n                                selectedKey="{EmployeeInput>/role/ID}"\n                                placeholder="{i18n>placeholderRole}" required="true"><core:Item id="i_itemRole" key="{Role>ID}"\n                                    text="{Role>name}"\n                                    enabled="{Edit>/isEdit}" /></ComboBox></VBox></HBox><HBox id="i_HBoxhireDate" alignItems="Center"><VBox id="i_VBoxlhireDate" width="40%"><Label id="i_lhireDate" text="{i18n>hireDate}" required="true" /></VBox><VBox id="i_VBoxhireDate" width="60%"><DatePicker id="i_hireDate"\n                                value="{EmployeeInput>/hireDate}"\n                                valueFormat="yyyy-MM-dd"\n                                placeholder="{i18n>placeholderHireDate}" enabled="{Edit>/isEdit}"\n                                required="true" /></VBox></HBox></VBox><VBox id="i_rightContainer" class="rightContainer" width="50%" gap="1rem"><HBox id="i_VBoxLastName" alignItems="Center"><VBox id="i_VBoxLLastName" width="40%"><Label id="i_lLastName" text="{i18n>lastName}" required="true" /></VBox><VBox id="i_VBoxILastName" width="60%"><Input id="i_iLastName" type="Text"\n                                placeholder="{i18n>placeholderLastName}"\n                                value="{EmployeeInput>/lastName}"\n                                enabled="{Edit>/isEdit}" required="true" /></VBox></HBox><HBox id="i_DateOfBirth" alignItems="Center"><VBox id="i_VBoxlDateofBirth" width="40%"><Label id="i_lDateofBirth" text="{i18n>dateOfBirth}" required="true" /></VBox><VBox id="i_VBoxDateofBirth" width="60%"><DatePicker id="i_DateofBirth" \n                                valueFormat="yyyy-MM-dd"\n                                value="{EmployeeInput>/dateOfBirth}" required="true" /></VBox></HBox><HBox id="i_VBoxblank1" alignItems="Center" class="blankDetail"><VBox id="i_VBoxIblank1"><Input id="i_iblank1" type="Text" /></VBox></HBox><HBox id="i_VBoxDepartment" alignItems="Center"><VBox id="i_VBoxLDepartment" width="40%"><Label id="i_lDepartment" text="{i18n>department}" required="true" /></VBox><VBox id="i_VBoxIDepartment" width="60%"><ComboBox id="i_ComboBoxDepartment" items="{Department>/}" width="100%"\n                                placeholder="{i18n>placeholderDepartment}"\n                                selectedKey="{EmployeeInput>/department/ID}" required="true"><core:Item id="i_itemDepartment" key="{Department>ID}"\n                                    text="{Department>name}" enabled="{Edit>/isEdit}" /></ComboBox></VBox></HBox><HBox id="i_VBoxblank2" alignItems="Center" class="blankDetail"><VBox id="i_VBoxIblank2"><Input id="i_iblank2" type="Text" /></VBox></HBox></VBox></HBox><HBox id="i_footer" justifyContent="End" gap="1rem"><Button id="btnCloseinput" text="{i18n>close}" type="Transparent"\n                    press="onPressClose" /><Button id="btnCreate" text="{i18n>create}" type="Emphasized" press="onPressCreate" /></HBox></VBox></VBox></core:FragmentDefinition>',
	"employee-management/view/fragment/List.fragment.xml":'<core:FragmentDefinition xmlns:f="sap.f" displayBlock="true"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:tnt="sap.tnt"\n    xmlns:fb="sap.ui.comp.filterbar"\n    xmlns:t="sap.ui.table"\n    xmlns:mvc="sap.ui.core.mvc" height="100%"><VBox id="listContainer" class="listContainer" visible="{VisibleControl>/List}"><HBox id="VBox_footer" justifyContent="SpaceBetween"><Title id="tilte1" text="{i18n>employeeList}" class="title" /><Button id="btnClose" type="Transparent" text="{i18n>close}" press="onPressClose" /></HBox><VBox id="vbox_table" class="table"><fb:FilterBar id="filterbar" search=".onFilterSearch" filterChange=".onFilterChange"\n                useToolbar="false" afterVariantLoad=".onAfterVariantLoad" showClearOnFB="true"\n                clear=".onClearFilters"><fb:filterGroupItems><fb:FilterGroupItem id="FilterGroupItem2" visibleInFilterBar="true" name="Role"\n                        label="{i18n>role}" groupName="gr1"><fb:control><MultiComboBox id="MultiComboBox2" name="Role"\n                                selectionChange=".onSelectionChange" items="{Role>/}"><core:Item id="Item2" key="{Role>ID}" text="{Role>name}" /></MultiComboBox></fb:control></fb:FilterGroupItem><fb:FilterGroupItem id="FilterGroupItem1" visibleInFilterBar="true"\n                        name="Department" label="Department" groupName="gr1"><fb:control><MultiComboBox id="MultiComboBox1" name="Department"\n                                selectionChange=".onSelectionChange" items="{Department>/}"><core:Item id="Item" key="{Department>ID}"\n                                    text="{Department>name}" /></MultiComboBox></fb:control></fb:FilterGroupItem></fb:filterGroupItems></fb:FilterBar><Table id="table" mode="MultiSelect" items="{path: \'EmployeeList>/\' }"\n                itemPress="onItemPress"\n                fixedLayout="false" growing="true" growingThreshold="100"\n                updateFinished="onSetLabelRole"><columns><Column id="col_Name" width="15%" hAlign="Left"><Label id="l_Name" text="{i18n>name}" textAlign="Left" width="100%" /></Column><Column id="col_Gender" width="10%" hAlign="Center"><Label id="l_Gender" text="{i18n>gender}" textAlign="Center" width="100%" /></Column><Column id="col_role" hAlign="Center" width="15%"><Label id="l_role" text="{i18n>role}" textAlign="Center" width="100%" /></Column><Column id="col_Department" width="15%" hAlign="Left"><Label id="l_Department" text="{i18n>department}" width="100%"\n                            textAlign="Center" /></Column><Column id="col_email" width="15%" hAlign="Left"><Label id="l_email" text="{i18n>email}" width="100%" textAlign="Center" /></Column><Column id="col_Dob" width="10%" hAlign="Right"><Label id="l_Dob" text="{i18n>dateOfBirth}" width="100%" textAlign="Center" /></Column><Column id="col_salary" width="10%" hAlign="Right"><Label id="l_salary" text="{i18n>salary}" width="100%" textAlign="Center" /></Column><Column id="col_delete" width="5%" hAlign="Center"><Label id="l_delete" width="100%" /></Column></columns><items><ColumnListItem id="cl_listItem" vAlign="Middle" type="Active"><cells><Text id="txt_Name" class="textTable"\n                                text="{EmployeeList>firstName} {EmployeeList>lastName}"\n                                textAlign="Center" /><Text id="txt_Gender" class="textTable"\n                                text="{EmployeeList>gender}"\n                                textAlign="Center" /><tnt:InfoLabel id="txt_role" text="{EmployeeList>role/name}"\n                                class="textLabel" /><Text id="txt_Department" class="textTable" textAlign="Center"\n                                text="{EmployeeList>department/name}" wrapping="false" /><Text id="txt_Email" class="textTable" textAlign="Center"\n                                text="{EmployeeList>email}" /><Text id="txt_DateOfBirth" class="textTable" textAlign="Right"\n                                text="{path: \'EmployeeList>dateOfBirth\', formatter:\'.formatter.formatDate\'}"\n                                wrapping="false" /><Text id="txt_salary" class="textTable" textAlign="Right"\n                                text="{path: \'EmployeeList>salary\', formatter:\'.formatter.formatCurrency\'}"\n                                wrapping="false" /><Button id="btn_Delete" icon="sap-icon://decline"\n                                type="Transparent"\n                                press="onItemDelete" /></cells></ColumnListItem></items></Table></VBox></VBox></core:FragmentDefinition>'
});
//# sourceMappingURL=Component-preload.js.map
